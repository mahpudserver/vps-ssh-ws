name: VPS SSH WebSocket via GitHub Actions

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH, Python, dan Ngrok
        run: |
          set +e

          echo "=== Update paket ==="
          for i in 1 2 3; do
            sudo apt-get update --fix-missing && break
            sleep 5
          done

          echo "=== Install paket ==="
          for pkg in openssh-server python3 python3-pip unzip screen netcat; do
            for i in 1 2 3; do
              DEBIAN_FRONTEND=noninteractive sudo apt-get install -y $pkg && break
              sleep 5
            done
          done

          pip3 install websockets || true

          # Buat user SSH
          sudo useradd -m github || true
          echo 'github:password123' | sudo chpasswd
          sudo usermod -aG sudo github || true

          # Jalankan SSH Server
          sudo service ssh start || true

          # Download Ngrok
          wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip
          unzip ngrok-v3-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin
          
          # Token ngrok
          ngrok config add-authtoken 31KUj24RfwPkXQ4xsyW3RhMXH3C_6fdwrjT7h7KGtay9XYy6U

          # Buat WebSocket listener di port 8080
          cat << 'EOF' > ws.py
          import asyncio, websockets, subprocess

          async def handler(websocket, path):
              proc = await asyncio.create_subprocess_exec(
                  "nc", "127.0.0.1", "22",
                  stdin=asyncio.subprocess.PIPE,
                  stdout=asyncio.subprocess.PIPE
              )

              async def ws_to_proc():
                  try:
                      async for message in websocket:
                          proc.stdin.write(message.encode())
                          await proc.stdin.drain()
                  except:
                      pass

              async def proc_to_ws():
                  try:
                      while True:
                          data = await proc.stdout.read(1024)
                          if not data:
                              break
                          await websocket.send(data.decode(errors="ignore"))
                  except:
                      pass

              await asyncio.gather(ws_to_proc(), proc_to_ws())

          start_server = websockets.serve(handler, "0.0.0.0", 8080)
          asyncio.get_event_loop().run_until_complete(start_server)
          asyncio.get_event_loop().run_forever()
          EOF

          # Jalankan WebSocket
          screen -dmS ws python3 ws.py

          # Expose port 8080 lewat Ngrok
          screen -dmS ngrok80 ngrok tcp 8080 --log=stdout > ngrok.log &

          # Tunggu sampai ngrok siap
          for i in {1..10}; do
            HOSTPORT=$(curl --silent http://127.0.0.1:4040/api/tunnels | grep -o 'tcp://[0-9a-zA-Z.:]*' | sed 's/tcp:\/\///')
            if [ -n "$HOSTPORT" ]; then
              break
            fi
            echo "Menunggu ngrok..."
            sleep 3
          done

          echo "====================================="
          if [ -n "$HOSTPORT" ]; then
            echo "✅ VPS SSH WS Aktif!"
            echo "Host & Port : $HOSTPORT"
            echo "Username    : github"
            echo "Password    : password123"
            echo
            echo "Payload SSH WS:"
            echo "GET / HTTP/1.1[crlf]Host: $HOSTPORT[crlf]Upgrade: websocket[crlf][crlf]"
          else
            echo "❌ Gagal mendapatkan Host & Port dari ngrok"
            echo "Log ngrok:"
            cat ngrok.log
          fi
          echo "====================================="
